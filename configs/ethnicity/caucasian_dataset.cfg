[DATASET]
filters=["phase_perc_size"]
image_size = 256
net_input_size = 224
transforms_type=mtcnn
dataset_means = [0.5, 0.5, 0.5]
dataset_stds = [0.5, 0.5, 0.5]
raw_dataset_path = /home/ssd_storage/datasets/students/OM/datasets/3
crop_scale={"max": 1.0, "min": 1.0}
processed_dataset_root = /home/ssd_storage/datasets/processed/
class_filter_dataset_dir = phase_perc_size
dataset_name = caucasian_dataset
phase_size_dict = {"train":0.8, "val": 0.2}

[MODELLING]
feature_parallelized_architectures = ["VGG", "vgg11", "vgg11_bn", "vgg13", "vgg13_bn", "vgg16", "vgg16_bn",
    "vgg19_bn", "vgg19", "AlexNet", "alexnet"]
architecture = vgg16
# If you want to start from the middle of training, set this to the epoch you wish to start from (it will load start_epoch-1 from the dir)
start_epoch = 0
end_epoch = 0
is_pretrained = False
num_classes = 477
criterion_name = CrossEntropyLoss
criterion_params = {}
batch_size=128
workers=4
performance_test=LFW_TEST
; performance_test=None
perf_threshold=0.99
#each #num_epochs_to_test we make a LFW test
num_epochs_to_test=10
num_batches_per_epoch_limit=1000
logs_path=${GENERAL:root_dir}/${GENERAL:experiment_name}/${MODELLING:architecture}/results/
checkpoint_path=/home/ssd_storage/experiments/students/OM/3_expirement/vgg16/models/109.pth

[OPTIMIZING]
optimizer = SGD
optimizer_params = {
    "lr": 0.01,
    "momentum": 0.9,
    "weight_decay": 5e-4}
lr_scheduler = StepLR
lr_scheduler_params = {
    "step_size": 100,
    "gamma": 0.1}

[GENERAL]
root_dir = /home/ssd_storage/experiments/
experiment_name = caucasian_trained_view_inv

[LFW_TEST]
reps_layers=RepLayer
labeled_pairs_path=/home/administrator/experiments/familiarity/dataset/image_pairs_lists/mutualy_exclusive/pretraining_verification.txt
reps_cache_path=${GENERAL:root_dir}/${GENERAL:experiment_name}/lfw/reps/
comparison_metric=cos
lfw_dir=/home/administrator/experiments/familiarity/dataset/processed_pretraining_dataset/phase_perc_size/pretraining_fixed_{'train': 0.7, 'val': 0.2, 'test': 0.1}/test
reps_results_path=${GENERAL:root_dir}/${GENERAL:experiment_name}/${MODELLING:architecture}/results/
output_filename=pretraining_verification_performance.csv

[REP_BEHAVIOUR]
reps_layers=BlauchEquivalentExtractor
pairs_paths = {
                "diff_pairs": "/home/administrator/datasets/high_low_ps_images/image_pairs_lists/diff_pairs.txt",
                "high_ps_pairs": "/home/administrator/datasets/high_low_ps_images/image_pairs_lists/high_ps_pairs.txt",
                "low_ps_pairs": "/home/administrator/datasets/high_low_ps_images/image_pairs_lists/low_ps_pairs.txt",
                "same_pairs": "/home/administrator/datasets/high_low_ps_images/image_pairs_lists/same_pairs.txt",
                "frontal-ref": "/home/administrator/datasets/faces_in_views/frontal_ref.txt",
                "frontal-quarter_left": "/home/administrator/datasets/faces_in_views/frontal_quarter_left.txt",
                "frontal-half_left": "/home/administrator/datasets/faces_in_views/frontal_half_left.txt",
                "half_left-half_right": "/home/administrator/datasets/faces_in_views/half_left-half_right.txt",
                "quarter_left-quarter_right": "/home/administrator/datasets/faces_in_views/quarter_left-quarter_right.txt"}
pairs_image_dirs = {
                "diff_pairs": "/home/administrator/datasets/high_low_ps_images/joined",
                "high_ps_pairs": "/home/administrator/datasets/high_low_ps_images/joined",
                "low_ps_pairs": "/home/administrator/datasets/high_low_ps_images/joined",
                "same_pairs": "/home/administrator/datasets/high_low_ps_images/joined",
                "frontal-ref": "/home/administrator/datasets/faces_in_views",
                "frontal-quarter_left": "/home/administrator/datasets/faces_in_views",
                "frontal-half_left": "/home/administrator/datasets/faces_in_views",
                "half_left-half_right": "/home/administrator/datasets/faces_in_views",
                "quarter_left-quarter_right": "/home/administrator/datasets/faces_in_views"}

reps_cache_path=${GENERAL:root_dir}/${GENERAL:experiment_name}/pairs/reps/
reps_results_path=${GENERAL:root_dir}/${GENERAL:experiment_name}/${MODELLING:architecture}/results/
comparison_metric=l2

output_filename=reps