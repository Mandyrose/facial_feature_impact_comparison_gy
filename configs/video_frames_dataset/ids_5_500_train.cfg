[DATASET]
filters = ["class_size", "class_num", "phase_size"]
min_class_size=1500
image_size = 256
net_input_size = 224
dataset_means = [0.5, 0.5, 0.5]
dataset_stds = [0.5, 0.5, 0.5]
transforms_type=mtcnn
max_num_classes=5
min_num_classes=5
# set this dir to the dataset dir
raw_dataset_path = /home/ssd_storage/datasets/modern_family_mtcnn_joined
crop_scale={"max": 1.0, "min": 1.0}
processed_dataset_root = /home/ssd_storage/datasets/processed/
class_filter_dataset_dir = phase_size
dataset_size_filter_dir = num_classes
class_size_filter_dir = class_size
dataset_name = 500_imgs_mtcnn
phase_size_dict = {"train":500, "val": 1000}

[MODELLING]
feature_parallelized_architectures = ["VGG", "vgg11", "vgg11_bn", "vgg13", "vgg13_bn", "vgg16", "vgg16_bn",
    "vgg19_bn", "vgg19", "AlexNet", "alexnet"]
#architecture = wide_resnet50_2
architecture = vgg16
# If you want to start from the middle of training, set this to the epoch you wish to start from (it will load start_epoch-1 from the dir)
start_epoch = 0
end_epoch = 120
is_pretrained = False
num_classes = 5
criterion_name = CrossEntropyLoss
criterion_params = {}
batch_size=128
workers=4
performance_test=LFW_TEST
#performance_test=None
perf_threshold=1.0
#each #num_epochs_to_test we make a LFW test
num_epochs_to_test=10
num_batches_per_epoch_limit=1000

[OPTIMIZING]
optimizer = SGD
optimizer_params = {
    "lr": 0.01,
    "momentum": 0.9,
    "weight_decay": 1e-4}
lr_scheduler = StepLR
lr_scheduler_params = {
    "step_size": 80,
    "gamma": 0.1}

; [FINETUNING]
; classes_mode=replace
; #replace/append
; num_classes=260
; freeze_end=35
; #42-fc8, 35-fc6, 26-conv5

[GENERAL]
root_dir = /home/ssd_storage/experiments/
#change to name of experiment (the output folder will be created accordingly)
experiment_name = ids_5_train_500

[LFW_TEST]
reps_layers=Fc78Dict
labeled_pairs_path=./lfw_test_pairs.txt
reps_cache_path=${GENERAL:root_dir}/${GENERAL:experiment_name}/lfw/reps/
reps_results_path=${GENERAL:root_dir}/${GENERAL:experiment_name}/${MODELLING:architecture}/results/
output_filename=lfw_results
comparison_metric=cos
lfw_dir=/home/administrator/datasets/lfw-align-128

[REP_BEHAVIOUR]
reps_layers=BlauchEquivalentExtractor
pairs_paths = {
                "diff_pairs": "/home/administrator/datasets/high_low_ps_images/image_pairs_lists/diff_pairs.txt",
                "high_ps_pairs": "/home/administrator/datasets/high_low_ps_images/image_pairs_lists/high_ps_pairs.txt",
                "low_ps_pairs": "/home/administrator/datasets/high_low_ps_images/image_pairs_lists/low_ps_pairs.txt",
                "same_pairs": "/home/administrator/datasets/high_low_ps_images/image_pairs_lists/same_pairs.txt",
                "frontal-ref": "/home/administrator/datasets/faces_in_views/frontal_ref.txt",
                "frontal-quarter_left": "/home/administrator/datasets/faces_in_views/frontal_quarter_left.txt",
                "frontal-half_left": "/home/administrator/datasets/faces_in_views/frontal_half_left.txt",
                "half_left-half_right": "/home/administrator/datasets/faces_in_views/half_left-half_right.txt",
                "quarter_left-quarter_right": "/home/administrator/datasets/faces_in_views/quarter_left-quarter_right.txt"}
pairs_image_dirs = {
                    "diff_pairs": "/home/administrator/datasets/high_low_ps_images/joined",
                    "high_ps_pairs": "/home/administrator/datasets/high_low_ps_images/joined",
                    "low_ps_pairs": "/home/administrator/datasets/high_low_ps_images/joined",
                    "same_pairs": "/home/administrator/datasets/high_low_ps_images/joined",
                    "frontal-ref": "/home/administrator/datasets/faces_in_views",
                    "frontal-quarter_left": "/home/administrator/datasets/faces_in_views",
                    "frontal-half_left": "/home/administrator/datasets/faces_in_views",
                    "half_left-half_right": "/home/administrator/datasets/faces_in_views",
                    "quarter_left-quarter_right": "/home/administrator/datasets/faces_in_views"}

reps_cache_path=${GENERAL:root_dir}/${GENERAL:experiment_name}/pairs/reps/
reps_results_path=${GENERAL:root_dir}/${GENERAL:experiment_name}/${MODELLING:architecture}/results/
comparison_metric=l2

output_filename=reps

# TODO: Create a standard output folder and format
